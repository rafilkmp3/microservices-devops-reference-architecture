events {
    worker_connections 1024;
}

http {
    upstream configuration-service {
        least_conn;
        server configuration-service:3001 max_fails=3 fail_timeout=30s;
    }

    upstream log-aggregator-service {
        least_conn;
        server log-aggregator-service:3002 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Configuration Service
    server {
        listen 80;
        server_name config.local localhost;

        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://configuration-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /health {
            proxy_pass http://configuration-service/health;
            access_log off;
        }
    }

    # Log Aggregator Service
    server {
        listen 80;
        server_name logs.local;

        location / {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://log-aggregator-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Increase body size for bulk log uploads
            client_max_body_size 10M;
        }

        location /health {
            proxy_pass http://log-aggregator-service/health;
            access_log off;
        }
    }

    # Default server for health checks
    server {
        listen 80 default_server;
        server_name _;
        
        location / {
            return 404;
        }
        
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}